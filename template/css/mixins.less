// out: null

/* Parametric mixin for headings */

.headingStyle(@paramColor: #FFF; @paramSize: 1em) {
    color: @paramColor; // this accepts a font color passed through as an argument
    font-size: @paramSize; // this accepts a font size passed through as an argument
    font-weight: bold; // this is static code... not everything has to be dynamic!
    line-height: @paramSize; // this reuses the same font size as before to change line height
    margin-top: @paramSize /2;
    margin-bottom: @paramSize /2;
    text-align: center;
    text-transform: uppercase;
}

/* End parametric mixin for headings */

.alignHeight() {
    text-align: center;
    line-height: 2em;
}

.backgroundGradient(@paramDirection: left; @paramColorOne: #CCC; @paramColorTwo: #AAA) {
    background-image: linear-gradient(@paramDirection, @paramColorOne, @paramColorTwo);
    background-image: -webkit-linear-gradient(@paramDirection, @paramColorOne, @paramColorTwo);
    background-image: -moz-linear-gradient(@paramDirection, @paramColorOne, @paramColorTwo);
    background-image: -ms-linear-gradient(@paramDirection, @paramColorOne, @paramColorTwo);
    background-image: -o-linear-gradient(@paramDirection, @paramColorOne, @paramColorTwo);
}

.boldUpper() {
    font-weight: bold;
    text-transform: uppercase;
}

.borderSides() {
    border-left: 5px solid #000;
    border-right: 3px solid #000;
}

.boxDropShadow(@paramX: 3px; @paramY: 3px; @paramBlur: 5px; @paramSpread: none; @paramBoxColor: #000) {
    box-shadow: @paramX @paramY @paramBlur @paramSpread @paramBoxColor;
    -webkit-box-shadow: @paramX @paramY @paramBlur @paramSpread @paramBoxColor;
    -moz-box-shadow: @paramX @paramY @paramBlur @paramSpread @paramBoxColor;
}

.expand() {
    transform: scale(1.1);
    display: inline-block;
}

.imgFlip() {
    -moz-transform: scaleX(-1);
    -o-transform: scaleX(-1);
    -webkit-transform: scaleX(-1);
    transform: scaleX(-1);
    filter: FlipH;
    -ms-filter: "FlipH";
}

.italUndline() {
    font-style: italic;
    text-decoration: underline;
}

.navLiFontStyle() {
    list-style: none;
    font-weight: bold;
    font-size: 1.2em;
    text-align: center;
}

.fontSize_BoxSize(@paramLineHeight: 1em; @paramFontSize: 1em; @paramMarginUpDown: 5px; @paramMarginLR: auto; ) {
    font-size: @paramFontSize;
    line-height: @paramLineHeight;
    margin: @paramMarginUpDown @paramMarginLR;

}

.roundColorBox(@paramRound: 25px; @paramBGColor: #000) {
    border-radius: @paramRound;
    background-color: @paramBGColor;
}

.sectionBorders(@paramBorderBot: 3px solid @darkColor4; ) {
    border-bottom: @paramBorderBot;
}

.smallCaps() {
    font-variant: small-caps;
}

.textshadowspace() {
    text-shadow: 5px 5px 5px #ccccc0;
    word-spacing: 1.1em;
}

.transparent() {
    opacity: .5;
}

/* Mixins created for final site project */

.margin_Pad_Border(@paramMargin: 0 auto; @paramPadding: 0 6px; @paramBorder: none; @paramBorderBot: none) {
    margin: @paramMargin;
    padding: @paramPadding;
    border: @paramBorder;
    border-bottom: @paramBorderBot;
}

.headingStyleNoMargin(@paramColor: #FFF; @paramSize: 1em) {
    color: @paramColor; // this accepts a font color passed through as an argument
    font-size: @paramSize; // this accepts a font size passed through as an argument
    font-weight: bold; // this is static code... not everything has to be dynamic!
    line-height: @paramSize; // this reuses the same font size as before to change line height
    text-align: center;
    text-transform: uppercase;
}

.subtleBorderBot() {
    border-bottom: 2px dashed @greyColor3;
}
